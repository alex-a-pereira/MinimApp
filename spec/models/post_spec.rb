require 'rails_helper'

RSpec.describe Post, type: :model do
  context "Long name failure case" do
    it "Fails rejects because length > 40" do
      test_name = "NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME NAME"
      test_content = "CONTENT"
      expect { Post.create!(:name => test_name, :content => test_content, ) }.to raise_error(ActiveRecord::RecordInvalid)
    end
  end

  context "Long content failure case" do
    it "Fails rejects because length > 2000" do
      test_name = "NAME NAME NAME "
      test_content
      expect { Post.create!(:name => test_name, :content => test_content, ) }.to raise_error(ActiveRecord::RecordInvalid)
    end
  end

  context "Long name and content success case" do
    it "Stores correctly b/c len < 2000" do
      test_name = "NAMENAMENAMENAMENAMENAMENAMENAME"
      test_content
      post = Post.create!(:name => test_name, :content => test_content, )
      expect(post.reload.name).to eq(test_name)
      expect(post.reload.content).to eq(test_content)
    end
  end

end
